class Solution {
public:
    /**
     * @param grid a boolean 2D matrix
     * @return an integer
     */
     
    void checkIsland(vector<vector<bool>>& grid, int row, int col)
    {
    	if (row < 0 || col < 0 || row >= grid.size() || col >= grid[0].size())
    	{
    		return;
    	}
    	if (grid[row][col] == 1)
    	{
    		grid[row][col] = 0;
    		checkIsland(grid, row + 1, col);
    		checkIsland(grid, row - 1, col);
    		checkIsland(grid, row, col + 1);
    		checkIsland(grid, row, col - 1);
    	}
    }
    
    int numIslands(vector<vector<bool>>& grid) {
        // Write your code here
        int count = 0;
    	if (grid.size() == 0) return 0;
    
    	for (int i = 0; i < grid.size(); i++)
    	{
    		for (int j = 0; j < grid[0].size(); j++)
    		{
    			if (grid[i][j] == 1)
    			{
    				count++;
    				checkIsland(grid, i, j);
    			}
    		}
    	}
    	return count;
        }
};
