class Solution {
public:    
    /**
     * @param numbers : Give an array numbers of n integer
     * @return : Find all unique triplets in the array which gives the sum of zero.
     */
    vector<vector<int> > threeSum(vector<int> &nums) {
        // write your code here
        vector<vector<int>> result;
        sort(nums.begin(), nums.end());
        for (int i = 0; i < nums.size(); i++)
        {
            if(i > 0 && nums[i] == nums[i-1]) continue;
            int target = nums[i] * -1;
            //two sum
            int left = i + 1;
            int right = nums.size() -1;
            while(left < right)
            {
                if(left > i+1 && nums[left] == nums[left - 1]) 
                {
                    left++;
                    continue;
                }
                
                if(nums[left] + nums[right] > target)
                {
                    right--;
                }
                
                else if(nums[left] + nums[right] < target)
                {
                    left++;
                }
                
                else
                {
                    vector<int> tmp;
                    tmp.emplace_back(nums[i]);
                    tmp.emplace_back(nums[left]);
                    tmp.emplace_back(nums[right]);
                    result.emplace_back(tmp);
                    tmp.clear();
                    left++;
                }
            }
        }
        return result;
    }
};
