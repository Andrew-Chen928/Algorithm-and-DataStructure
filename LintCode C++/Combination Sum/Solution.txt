class Solution {
private:
    vector<vector<int>> res;
    
public:
    /**
     * @param candidates: A list of integers
     * @param target:An integer
     * @return: A list of lists of integers
     */
    void combin(vector<int> &tmp, vector<int> can, int sum, int index, int target)
    {
        for(int i = index; i < can.size(); i++)
        {
            if(can[i] == can[i-1]) continue;
            if(sum + can[i] > target) return;
            else if(sum + can[i] == target)
            {
                tmp.emplace_back(can[i]);
                sum += can[i];
                res.emplace_back(tmp);
            }
            else 
            {
                tmp.emplace_back(can[i]);
                sum += can[i];
                combin(tmp, can, sum, i, target);
            }
            tmp.pop_back();
            sum -= can[i];
        }
    }
    
    vector<vector<int> > combinationSum(vector<int> &candidates, int target) {
        // write your code here
        vector<int> tmp;
        sort(candidates.begin(), candidates.end());
        combin(tmp, candidates, 0, 0, target);
        return res;
    }
};