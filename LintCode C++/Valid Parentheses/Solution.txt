class Solution {
private:
    char convert(char a)
        {
            if(a == '}') return '{';
            if(a == ']') return '[';
            if(a == ')') return '(';
        }
    
public:
    /**
     * @param s A string
     * @return whether the string is a valid parentheses
     */
    bool isValidParentheses(string& s) {
        // Write your code here
        if(s.length() % 2 != 0) return false;
        stack<char> st;
    	for (int i = 0; i < s.length(); i++)
    	{
    		if (s[i] == '{' || s[i] == '[' || s[i] == '(' )
    		{
    			st.push(s[i]);
    		}
    		else if (s[i] == '}' || s[i] == ']' || s[i] == ')')
    		{
    			if (st.empty() || st.top() != convert(s[i])) return false;
    			else st.pop();
    		}
    	}
    	return st.empty();
    }
};
