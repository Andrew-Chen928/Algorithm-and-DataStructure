/**
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 */


class Solution {
public:
    /**
     * @param root: The root of binary tree.
     * @return: Preorder in vector which contains node values.
     */
    vector<int> preorderTraversal(TreeNode *root) {
        // write your code here
        vector<int> result;
        stack<TreeNode*> s;
        TreeNode* tmp;
        if(root != nullptr)
        {
            tmp = root;
            s.push(tmp);
        }
        
        while(!s.empty())
        {
            tmp = s.top();
            s.pop();
            result.emplace_back(tmp->val);
            if(tmp->right != nullptr) s.push(tmp->right);
            if(tmp->left != nullptr) s.push(tmp->left);
        }
        return result;
    }
};
