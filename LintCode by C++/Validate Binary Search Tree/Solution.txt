/**
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 */
 
void inorder(TreeNode *root, vector<int> &v)
{
    if(root != nullptr)
    {
        inorder(root->left, v);
        v.emplace_back(root->val);
        inorder(root->right, v);
    }
}

class Solution {
public:
    /**
     * @param root: The root of binary tree.
     * @return: True if the binary tree is BST, or false
     */
    bool isValidBST(TreeNode *root) {
        // write your code here
       if(root == nullptr) return true;
       vector<int> treeValue;
       inorder(root, treeValue);
       for(int i = 0; i < treeValue.size() - 1; i++)
       {
           if(treeValue[i] >= treeValue[i+1]) return false;
       }
       return true;
    }
};