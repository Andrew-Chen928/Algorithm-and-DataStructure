class Solution {
public:
    /*
     * param k : description of k
     * param nums : description of array and index 0 ~ n-1
     * return: description of return
     */
    int findKth(vector<int> nums, int start, int end, int k)
    {
        if (start == end) {
            return nums[start];
        }
        int p = nums[start];
        int i = start, j = end;
        while(i < j)
        {
            while(i < j && nums[j] >= p) 
            {
                j--;
            }
            nums[i] = nums[j];
            while(i < j && nums[i] < p) 
            {
                i++; 
            }
            nums[j] = nums[i];
        }
        nums[i] = p;
        if(i + 1 == k) return nums[i];
        else if(i + 1 < k) return findKth(nums, i + 1, end, k);
        else return findKth(nums, start, i - 1, k);
    }
    int kthLargestElement(int k, vector<int> nums) {
        // write your code here
        int start = 0, end = nums.size() - 1;
        return findKth(nums, start, end, nums.size() - k + 1);
    }
};