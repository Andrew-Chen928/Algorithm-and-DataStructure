/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

TreeNode* findMin(TreeNode* p)
{
    while(p->left != nullptr)
    {
        p = p->left; 
    }
    return p;
}
 
 
class Solution {
public:
    TreeNode* inorderSuccessor(TreeNode* root, TreeNode* p) {
        // write your code here
        if(root == nullptr) return root;
        //target has a right child
        if(p->right != nullptr) 
        {
            return findMin(p->right);
        }
        
        //target has no right child
        else
        {
            TreeNode *successor = nullptr;
            TreeNode *ancestor = root;
            while(ancestor != p)
            {
                if(p->val < ancestor->val)
                {
                    successor = ancestor;
                    ancestor = ancestor->left;
                }
                else ancestor = ancestor->right;
            }
            return successor;
        }
    }
};