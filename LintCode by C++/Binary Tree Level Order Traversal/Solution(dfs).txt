/**
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 */

class Solution {
    /**
     * @param root: The root of binary tree.
     * @return: Level order a list of lists of integer
     */
public:
    
    int getHeight(TreeNode *root)
    {
        if(!root) return 0;
        return 1 + max(getHeight(root->left), getHeight(root->right));
    }
    
    void DFS(TreeNode *root, vector<vector<int>> &v, int n)
    {
        if(root){
            v[n].emplace_back(root->val);
            n++;
            DFS(root->left, v, n);
            DFS(root->right, v, n);
        }
        
    }
    
    vector<vector<int>> levelOrder(TreeNode *root) {
        // write your code here
        vector<vector<int>> res(getHeight(root));
        DFS(root, res, 0);
        return res;
    }
};
