class Solution {
public:
    /**
     * Determine whether s3 is formed by interleaving of s1 and s2.
     * @param s1, s2, s3: As description.
     * @return: true of false.
     */
    bool isInterleave(string s1, string s2, string s3) {
        // write your code here
        int m = s1.length(), n = s2.length();
        if(m + n != s3.length()) return false;
        vector<vector<int>> isInter (m + 1, vector<int>(n + 1, false));
        isInter[0][0] = true;
        
        //當 s2 為空 只看 s1 是否等於 s3
        for(int i = 1; i <= m; i++)
        {
            if(s1[i-1] == s3[i-1] && isInter[i-1][0])
            {
                isInter[i][0] = true;    
            }
        }
        
        //當 s1 為空 只看 s2 是否等於 s3
        for(int i = 1; i <= n; i++)
        {
            if(s2[i-1] == s3[i-1] && isInter[0][i-1])
            {
                isInter[0][i] = true;    
            }
        }
        
        //i, j 一律都從 1 開始 檢查s3 最後一位是否來自 s1 or s2
        for(int i = 1; i <= m; i++)
        {
            for(int j = 1; j <= n; j++)
            {
                if(s1[i-1] == s3[i+j-1] && isInter[i-1][j]) 
                {
                    isInter[i][j] = true;
                }
                else if(s2[j-1] == s3[i+j-1] && isInter[i][j-1])
                {
                    isInter[i][j] = true;
                }
            }
        }
        return isInter[m][n];
    }
};