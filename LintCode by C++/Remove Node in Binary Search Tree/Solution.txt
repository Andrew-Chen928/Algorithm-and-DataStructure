/**
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 */
class Solution {
public:
    /**
     * @param root: The root of the binary search tree.
     * @param value: Remove the node with given value.
     * @return: The root of the binary search tree after removal.
     */
     
    TreeNode* findMini(TreeNode *root)
    {
        TreeNode *tmp = root;
        while(tmp->left)
        {
            tmp = tmp->left;
        }
        return tmp;
    }
    
    TreeNode* removeNode(TreeNode* root, int value) {
        // write your code here
        if(root == nullptr) return root;
        if(value > root->val) root->right = removeNode(root->right, value);
        else if(value < root->val) root->left = removeNode(root->left, value);
        else{
            if(!root->left) return root->right;
            if(!root->right) return root->left;
            TreeNode *minNode = findMini(root->right);
            int remove_val = root->val;
            root->val = minNode->val;
            minNode->val = remove_val;
            root->right = removeNode(root->right, value);
        }
        return root;
    }
};