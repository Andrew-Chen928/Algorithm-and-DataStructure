class Solution {
public:    
    /**
     * @param S, T: Two string.
     * @return: Count the number of distinct subsequences
     */
    int numDistinct(string &S, string &T) {
        // write your code here
        int m = S.length() + 1;
        int n = T.length() + 1;
        vector<vector<int>> table(n, vector<int>(m));
        for(int i = 0; i < m; i++)
        {
            table[0][i] = 1;
        }
        for(int j = 1; j < n; j++)
        {
            table[j][0] = 0;
        }
        
        for(int i = 1; i < n; i++)
        {
            for(int j = 1; j < m; j++)
            {
                if(T[i-1] != S[j-1]) table[i][j] = table[i][j-1];
                else table[i][j] = table[i][j-1] + table[i-1][j-1];
            }
        }
        return table[n-1][m-1];
    }
};
