class Solution {
    public int numIslands(char[][] grid) {
        int count = 0;
        for(int i = 0; i < grid.length; i++) {
            for(int j = 0; j < grid[0].length; j++) {
                if(grid[i][j] == '1') {
                    count++;
                    dfs(i, j, grid);
                }
            }
        }
        return count;    
    }
    
    public void dfs(int i, int j, char[][] grid) {
        int lenC = grid[0].length;
        int lenR = grid.length;
        if(i >= 0 && j >= 0 && i < lenR && j < lenC) {
            if(grid[i][j] == '1') {
                grid[i][j] = 0;
                dfs(i + 1, j, grid);
                dfs(i - 1, j, grid);
                dfs(i, j + 1, grid);
                dfs(i, j - 1, grid);
            }
            
        }
    }
}