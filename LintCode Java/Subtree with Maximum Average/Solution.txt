/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @param root the root of binary tree
     * @return the root of the maximum average of subtree
     */
    private class nodeDetail {
        public int sum;
        public int size;
        public nodeDetail(int sum, int size)
        {
            this.sum = sum;
            this.size = size;
        }
    } 
    
    private TreeNode answer = null;
    private nodeDetail tmp = null; 
     
    public TreeNode findSubtree2(TreeNode root) {
        // Write your code here
        helper(root);
        return answer;
    }
    
    private nodeDetail helper(TreeNode root)
    {
        if(root == null) return new nodeDetail(0, 0);
        nodeDetail left = helper(root.left);
        nodeDetail right = helper(root.right);
        nodeDetail result = new nodeDetail(
            left.sum + right.sum + root.val,
            left.size + right.size + 1
        );
        
        if(answer == null || 
           tmp.sum * result.size < tmp.size * result.sum) {
            answer = root;
            tmp = result;
        }
        return result;
    }
}