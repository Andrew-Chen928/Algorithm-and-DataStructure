/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @param root the root of binary tree
     * @param target an integer
     * @return all valid paths
     */
    public List<List<Integer>> binaryTreePathSum(TreeNode root, int target) {
        // Write your code here
        ArrayList<List<Integer>> result = new ArrayList<>();
        if(root == null) return result;
        ArrayList<Integer> path = new ArrayList<Integer>();
        int sum = 0;
        helper(root, target, sum, path, result);
        return result;
    }
    
    private void helper(TreeNode root, int target, int sum, ArrayList<Integer> path, List<List<Integer>> result) {
        sum += root.val;
        path.add(root.val);
        if(sum == target && root.left == null && root.right == null) {
            result.add(new ArrayList<Integer>(path));
        }
        if(root.left != null) helper(root.left, target, sum, path, result);
        if(root.right != null) helper(root.right, target, sum, path, result);
        path.remove(path.size() - 1);
    }
}