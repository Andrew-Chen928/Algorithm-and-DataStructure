public class Solution {
    /*
     * @param A: a string
     * @param B: a string
     * @return: a boolean
     */
    public boolean Permutation(String A, String B) {
        // write your code here
        if(A == null || B == null || A.length() != B.length()) {
            return false;
        }
        Map<Character, Integer> map = new HashMap<>();
        for(int i = 0; i < A.length(); i++) {
            if(!map.containsKey(A.charAt(i))) {
                map.put(A.charAt(i), 1);
            }
            else {
                map.put(A.charAt(i), map.get(A.charAt(i)) + 1);
            }
        }
        
        // forEach method for looping a map
        // map.forEach((key, value) -> {
        //     System.out.println(key + ":" + value);
        // });
        
        for(int i = 0; i < B.length(); i++) {
            if(!map.containsKey(B.charAt(i)) || map.get(B.charAt(i)) == 0) {
                return false;
            } 
            else {
                map.put(B.charAt(i), map.get(B.charAt(i)) - 1);
            }
        }
        return true;
    }
}